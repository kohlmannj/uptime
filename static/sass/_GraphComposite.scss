.GraphCompositeView {
  position: relative;
  background-color: #fff;
  margin-top: pxtoem($outerMargin);
  margin-bottom: pxtoem($margin);

  .wrapper, svg.overlay {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: pxtoem(-$margin);
    overflow: auto;

    &::-webkit-scrollbar {
      width: pxtoem($margin);
      height: pxtoem($margin);
    }

    &::-webkit-scrollbar-track {
//      background-color: #e5e5e5;
      box-sizing: border-box;
      border: pxtoem(1px) solid #e5e5e5;
      border-radius: pxtoem($margin / 2);
    }

    &::-webkit-scrollbar-thumb {
      background-color: $headerBorderColor;
      border-radius: pxtoem($margin / 2);

      &:active {
        background-color: darken($headerBorderColor, 15%);
      }
    }

    svg {
      display: block;
      width: auto !important;
      height: 100% !important;
      background-color: #fff;
      margin-left: auto;

      &.paused {
        background-color: #e5e5e5;
      }
    }
  }

  svg.overlay {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
//    background-color: rgba(#ff0000, 0.15);
    pointer-events: none;
    margin: 0;

    .tick line {
      stroke: rgba(#000, 0.25);
      stroke-width: pxtoem(1px);
    }

    .domain {
      fill: none;
    }

    .bg {
      fill: rgba(#fff, 0.5);
    }

    .tick text {
      font-weight: 500;
      font-size: pxtoem($tickFontSize);
      fill: rgba(#000, 0.5);
      text-shadow: 2px 2px 0 rgba(#fff, 1);
    }
  }

  header {
    color: $headerBorderColor;
    position: absolute;
    top: pxtoem(-25px);
    left: 0;
    right: 0;
  }
}

.GraphLayout {
  float: left;
  width: 100%;
  position: relative;
}

// Average Load View

.AverageLoadCompositeView {
  @extend .GraphCompositeView;
  width: $loadAvgWidth;
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;

  .wrapper {
    overflow-y: hidden;
    overflow-x: scroll;
  }

  header {
    margin-right: 0;
  }
}

.AverageLoadView {
  @include transition(background-color 0.25s ease-in-out);

  .brush {
    rect {
      stroke: none;
      fill: rgba($headerBorderColor, 0);
//      fill: none;
    }

    rect:hover {
      fill: rgba($headerBorderColor, 0.25);
    }

    ellipse {
      fill: rgba(#000, 0.5);
//      stroke: rgba(#000, 0.5);
//      stroke-width: pxtoem(1px);
    }

    line {
      stroke: rgba(green, 0.65);
      stroke-width: pxtoem(2px);
    }

    .updated {
      stroke: rgba(orange, 0.65);
      stroke-width: pxtoem(2px);
    }

    &:hover {
      rect {
        fill: rgba($headerBorderColor, 0.5);
      }
    }
  }

  // Area Styles

  .area {
    @include transition(fill 0.25s ease-in-out);
    stroke-width: 0;
  }

  .fifteen-min-area {
    @extend .area;
    stroke: darken(#96b4be, 15%);
    stroke-width: pxtoem(2px);
//    fill: rgba(lighten(#96b4be, 10%), 0.85);
    fill: none;
  }

  .five-min-area {
    @extend .area;
    stroke: lighten($espyBlueColor, 0%);
    fill: rgba(lighten($espyBlueColor, 5%), $areaFillOpacity);
  }

  .one-min-area {
    @extend .area;
    stroke: darken(#082746, 5%);
    fill: rgba(lighten(#082746, 15%), 0.75);
  }

  // Unused Line Styles

  .line {
    stroke-width: pxtoem($lineWidth);
    fill: none;
    @include transition(stroke 0.25s ease-in-out);
  }

  .fifteen-min-line {
    @extend .line;
    stroke: darken(#96b4be, 10%);
  }

  .five-min-line {
    @extend .line;
    stroke: #082746;
  }

  .one-min-line {
    @extend .line;
    stroke: darken($espyBlueColor, 0%);
  }
}

// CPU Hive View

.CPUHiveCompositeView {
  @extend .GraphCompositeView;
  width: $cpuHiveWidth;
  height: 0;
  float: right;
  padding-bottom: $cpuHiveWidth;

  .wrapper {
    overflow: hidden;
    bottom: 0;
  }

  header {
    margin-left: pxtoem($outerMargin);
  }
}

.CPUHiveView {
  rect {
    fill: orange;
    stroke: black;
    stroke-width: 1px;
    @include transition(fill 0.25s ease-in-out);

    &:hover {
      fill: yellow;
    }
  }
}

@media screen and (max-width: 767px) {
  .AverageLoadView {
    .line {
      stroke-width: pxtoem($lineWidthNarrow);
    }

//    .area {
//      stroke-width: pxtoem($lineWidthNarrow);
//    }

    .fifteen-min-area {
      stroke-width: pxtoem($lineWidthNarrow);
    }
  }

  .GraphCompositeView {
    svg.overlay {
      .tick line {
        stroke-width: pxtoem($tickWidthNarrow);
      }

      .tick text {
        font-size: pxtoem($tickFontSizeNarrow);
      }
    }
  }
}
