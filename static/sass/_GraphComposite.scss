%tick-text {
  font-weight: 500;
  font-size: pxtoem($tickFontSize);
  fill: rgba(#000, 0.5);
}

.GraphCompositeView {
  position: relative;
  background-color: #fff;
  margin-top: pxtoem($outerMargin);
  margin-bottom: pxtoem($margin);

  .wrapper, svg.overlay {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: pxtoem(-$margin);
    overflow: auto;
    @include transition(background-color 0.25s ease-in-out);

    &::-webkit-scrollbar {
      width: pxtoem($margin);
      height: pxtoem($margin);
    }

    &::-webkit-scrollbar-track {
//      background-color: #e5e5e5;
      box-sizing: border-box;
      border: pxtoem(1px) solid rgba($headerBorderColor, 0.5);
      border-radius: pxtoem($margin / 2);
    }

    &::-webkit-scrollbar-thumb {
      background-color: $headerBorderColor;
      border-radius: pxtoem($margin / 2);

      &:active {
        background-color: darken($headerBorderColor, 15%);
      }
    }

    svg {
      display: block;
      width: auto !important;
      height: 100% !important;
      margin-left: auto;
    }
  }

  svg.overlay {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    height: 100% !important;
    width: auto !important;
//    background-color: rgba(#ff0000, 0.15);
    pointer-events: none;
    margin: 0;

    .tick line {
      stroke: rgba(#000, 0.25);
      stroke-width: pxtoem($tickWidth);
    }

    .domain {
      fill: none;
    }

    .bg {
      fill: rgba(#fff, 0.5);
      @include transition(fill 0.25s ease-in-out);
    }

    .tick text {
      @extend %tick-text;
    }
  }

  header {
    color: $headerBorderColor;
    position: absolute;
    top: pxtoem(-25px);
    left: 0;
    right: 0;
  }

  &.paused {
    .wrapper {
      background-color: #e5e5e5;
    }

    svg.overlay {
      .bg {
        fill: rgba(#e5e5e5, 0.5);
      }
    }
  }
}

// Define the layout and widths here.

.GraphLayout {
  float: left;
  width: 100%;
  position: relative;
  height: 0;
  padding-bottom: 32.03125%;

  .AverageLoadCompositeView {
    width: $loadAvgWidth;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    @include transition(width 0.5s ease-in-out);

    header {
      margin-right: 0;
    }
  }

  .CPUHiveCompositeView {
    width: $cpuHiveWidth;
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    @include transition(right 0.5s ease-in-out);

    header {
      margin-left: pxtoem($outerMargin);
    }
  }

  .MessagesCompositeView {
    @extend .GraphCompositeView;
    @include transition-property(-webkit-transform -moz-transform transform opacity);
    @include transition-duration(0.5s);
    @include transition-timing-function(ease-in-out);
    width: $messagesWidthMinusMargin;
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    pointer-events: none;
    @include scale(0,1);
    @include transform-origin(right center);
    opacity: 0;
  }

  &.withMessages {
    .AverageLoadCompositeView {
      width: $loadAvgWidthWithMessages;
    }

    .CPUHiveCompositeView {
      right: $messagesWidth;
    }

    .MessagesCompositeView {
      @include scale(1,1);
      opacity: 1.0;
    }
  }
}

// Average Load View

.AverageLoadCompositeView {
  @extend .GraphCompositeView;

  .wrapper {
    overflow-y: hidden;
    overflow-x: scroll;
  }
}

.AverageLoadView {
  @include transition(background-color 0.5s ease-in-out);

  .brush {
    rect {
      stroke: none;
      fill: rgba($headerBorderColor, 0);
    }

    ellipse, line {
      fill: none;
      stroke: rgba(#000, 0);
      stroke-width: pxtoem($tickWidth);
    }

    text {
      @extend %tick-text;
      opacity: 0;
      pointer-events: none;

      &.timestamp {
        text-transform: uppercase;
        font-size: pxtoem($tickFontSize - 4px);
      }
    }

    &:hover {
      rect {
        fill: rgba($headerBorderColor, 0.25);
      }

      line, ellipse {
        stroke: rgba(#000, 0.5);
      }

      text {
        fill: rgba(#000, 1.0);
        opacity: 1.0;

        &.timestamp {
          opacity: 0.5;
        }
      }
    }

    &[data-error="HighLoadStart"] {
      rect {
        fill: rgba(#cc0000, 0.25);
      }

      &:hover {
        rect {
          fill: rgba(#cc0000, 0.5);
        }

        line, ellipse {
          stroke: rgba(darken(#cc0000, 35%), 0.75);
        }
      }
    }

    &[data-error="HighLoadSustained"] {
      rect {
        fill: rgba($alertColor, 0.25);
      }

      &:hover {
        rect {
          fill: rgba($alertColor, 0.5);
        }

        line, ellipse {
          stroke: rgba(darken($alertColor, 35%), 0.75);
        }
      }
    }

    &[data-error="HighLoadEnd"] {
      rect {
        fill: rgba($successColor, 0.25);
      }

      &:hover {
        rect {
          fill: rgba($successColor, 0.5);
        }

        line, ellipse {
          stroke: rgba(darken($successColor, 35%), 0.75);
        }
      }
    }
  }

  // Area Styles

  .area {
    @include transition(fill 0.25s ease-in-out);
    stroke-width: 0;
  }

  .fifteen-min-area {
    @extend .area;
    stroke: darken(#96b4be, 15%);
    stroke-width: pxtoem(2px);
//    fill: rgba(lighten(#96b4be, 10%), 0.85);
    fill: none;
  }

  .five-min-area {
    @extend .area;
    stroke: lighten($espyBlueColor, 0%);
    fill: rgba(lighten($espyBlueColor, 5%), $areaFillOpacity);
  }

  .one-min-area {
    @extend .area;
    stroke: darken(#082746, 5%);
    fill: rgba(lighten(#082746, 15%), 0.75);
  }

  // Unused Line Styles

  .line {
    stroke-width: pxtoem($lineWidth);
    fill: none;
    @include transition(stroke 0.25s ease-in-out);
  }

  .fifteen-min-line {
    @extend .line;
    stroke: darken(#96b4be, 10%);
  }

  .five-min-line {
    @extend .line;
    stroke: #082746;
  }

  .one-min-line {
    @extend .line;
    stroke: darken($espyBlueColor, 0%);
  }
}

// CPU Hive View

.CPUHiveCompositeView {
  @extend .GraphCompositeView;

  .wrapper {
    overflow: hidden;
    bottom: 0;
  }
}

.CPUHiveView {
  rect {
    fill: orange;
    stroke: black;
    stroke-width: 1px;
    @include transition(fill 0.25s ease-in-out);

    &:hover {
      fill: yellow;
    }
  }
}

@media screen and (min-width: 768px) and (max-width: 960px) {
  .AverageLoadView {
    .brush {
      text {
        font-size: pxtoem($tickFontSizeMedium);
      }
    }
  }

  .GraphCompositeView {
    svg.overlay {
      .tick text {
        font-size: pxtoem($tickFontSizeMedium);
      }
    }
  }
}


@media screen and (max-width: 767px) {
  .AverageLoadView {
    .line {
      stroke-width: pxtoem($lineWidthNarrow);
    }

//    .area {
//      stroke-width: pxtoem($lineWidthNarrow);
//    }

    .fifteen-min-area {
      stroke-width: pxtoem($lineWidthNarrow);
    }

    .brush {
      line {
        stroke-width: pxtoem($tickWidthNarrow);
      }

      text {
        font-size: pxtoem($tickFontSizeNarrow);

        &.timestamp {
          font-size: pxtoem($tickFontSizeNarrow - 2px);
        }
      }
    }
  }

  .GraphCompositeView {
    svg.overlay {
      .tick line {
        stroke-width: pxtoem($tickWidthNarrow);
      }

      .tick text {
        font-size: pxtoem($tickFontSizeNarrow);
      }
    }
  }
}
